{"version":3,"sources":["styles/hex.scss","styles/base.scss"],"names":[],"mappings":"AACA,UACE,WAAA,CAOA,eACA,eACE,iCAAA,CACA,aAEF,gBAbF,kBAeI,AAfJ,YAeI,CACA,qBAAA,CACA,cACA,yBACE,8BAAA,CACA,+DAAA,CACA,qBAjBI,CAkBJ,QAAA,CACA,iBAAA,CACA,OAAA,CACA,8BAAA,CACA,UAEF,uCACE,2BASJ,UACE,oEADF,aACE,oEADF,gBACE,oEADF,kBACE,oEADF,eACE,oEADF,eACE,oEADF,eACE,oEADF,YACE,oEADF,aACE,oEAKF,kBACE,oEADF,gBACE,oEADF,gBACE,oEADF,aACE,oEADF,cACE,oEADF,aACE,oEADF,iBACE,oEADF,WACE,oEADF,WACE,oEAIJ,+BACE,kCAGF,gCArDA,aAAA,mBAAA,uBAAA,kBAAA,WAAA,YAuDE,AAvDF,uBAuDE,CACA,uBAAA,CACA,2BAAA,CACA,eACA,kFACE,sBAEF,yCACE,iBAIJ,MACE,sDAAA,CACA,oBAAA,CACA,eAAA,CACA,kBACA,gCACE,iBAAA,CACA,QAEF,gBACE,SAEF,gBACE,UC9EF,kBDFF,aAAA,eCII,4BDJJ,mBAAA","file":"base.488fb2f7.css","sourceRoot":"../client","sourcesContent":["$size: 2em;\n.hex-grid {\n  --columns: 5; /* should be overwrittenby component */\n  $sqrt3: 1.73205080757;\n  $hex_w: 2 * $size;\n  $hex_h: $sqrt3 * $size;\n  $cell_w: 0.75 * $hex_w;\n  $cell_h: $hex_h;\n  $buffer: 0.25em;\n  font-size: 16px;\n  .row {\n    width: calc(var(--columns) * #{$cell_w + $buffer});\n    display: flex;\n  }\n  .item {\n    @apply relative;\n    width: $hex_w / 2 + $buffer;\n    height: $hex_h + $buffer;\n    margin: 0 $hex_w / 8;\n    .content {\n      background: rgba(128,128,128,0.5);\n      clip-path: polygon(75% 0, 100% 50%, 75% 100%, 25% 100%, 0 50%, 25% 0);\n      height: $hex_h;\n      left: 50%;\n      position: absolute;\n      top: 50%;\n      transform: translate(-50%, -50%);\n      width: $hex_w;\n    }\n    &:nth-child(even) .content {\n      margin-top: - ($hex_h / 2 + 0.08em);\n    }\n  }\n}\n\n$custom: assasin_bug dragonfly earthworm earwig firefly mantis shield_bug tick wasp;\n$original: ant beetle centipede grasshopper lady_bug mosquito pill_bug queen spider;\n\n@each $type in $original {\n  .type-#{$type} {\n    background-image: url(../images/original/#{$type}.png);\n  }\n}\n\n@each $type in $custom {\n  .type-#{$type} {\n    background-image: url(../images/custom/#{$type}.png);\n  }\n}\n\n.hex-grid .item .content:hover {\n  box-shadow: inset 0 0 5px 8px #080;\n}\n\n.hex-grid .item .content .piece {\n  @apply flex items-center justify-center absolute w-full h-full;\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n  cursor: pointer;\n  &.player-1, &.player-2 {\n    background-color: white;\n  }\n  &.player-2 {\n    filter: invert(1);\n  }\n}\n\n.Game {\n  background: linear-gradient(135deg, #90F7EC 10%, #32CCBC 100%);\n  display: inline-block;\n  padding: 2 * $size (3 * $size);\n  position: relative;\n  .player_1, .player_2 {\n    position: absolute;\n    top: $size;\n  }\n  .player_1 {\n    left: $size / 2;\n  }\n  .player_2 {\n    right: $size / 2;\n  }\n}","@import './hex.scss';\n\n.rjsf {\n  .checkboxes {\n    @apply flex flex-wrap;\n    .checkbox {\n      @apply pr-4 w-1/3;\n    }\n  }\n}"]}